XML 파일 (ApplicationContext XML) 로딩 및 빈 생성

Spring 어플리케이션은 일반적으로 XML 파일에서 빈(Bean) 설정을 읽어와서 ApplicationContext를 초기화합니다.
XML 파일에는 Controller, Service, DAO 등의 빈들이 정의되어 있습니다.
Controller

클라이언트의 요청을 받는 부분입니다.
웹 어플리케이션에서 요청이 들어오면 DispatcherServlet이 해당 요청을 적절한 Controller에게 전달합니다.
Controller는 비즈니스 로직을 수행할 Service 빈을 호출하고, DAO를 통해 데이터베이스와 상호작용합니다.
ServiceImpl

Service 인터페이스를 구현한 구현체입니다.
비즈니스 로직을 담당합니다.
Controller로부터 전달받은 요청을 처리하고, 필요에 따라 DAO를 호출하여 데이터를 가져오거나 수정합니다.
DAO

Data Access Object의 약자로, 데이터베이스와의 직접적인 상호작용을 담당합니다.
데이터베이스에 접근하여 데이터를 읽거나 쓰는 기능을 제공합니다.
VO (Value Object)

데이터 전송을 위한 객체입니다.
DAO가 데이터베이스에서 가져온 결과를 VO 객체에 담아 ServiceImpl로 반환하거나, ServiceImpl이 Controller로 데이터를 전달할 때 사용됩니다.
XML, JSP

Controller가 요청을 처리하고 Service, DAO가 데이터 처리를 마치면, 그 결과를 XML 형태로 만들어 JSP로 전달합니다.
JSP는 Presentation Layer에서 사용자에게 보여질 화면을 생성합니다.
JSP는 XML에서 받은 데이터를 사용하여 동적으로 HTML을 생성하고, 클라이언트에게 반환합니다.
따라서 전체적인 실행 순서는 다음과 같습니다: Controller -> ServiceImpl -> DAO -> VO -> XML -> JSP

------yj
로그인 get, post방식
로그아웃 get방식
메인페이지 get방식
공지사항 get방식
공지사항 정보 페이지 get방식
공지사항 등록 get, post방식
공지사항 삭제 get방식
공지사항 수정 get, post방식

---------ug
과목 리스트 get방식
과목 검색 get방식
과목 등록 post,get방식
과목 삭제 post방식
마이페이지 get방식
마이페이지 수정 get,post방식
특정학기 평균 점수 get방식
학생 등수 get방식

----------sb
학생 정보 리스트 get방식
학생 상세 정보 get방식
신규 학생 등록 post,get방식
학생정보 수정 post,get방식
학생정보 삭제 get
학생성적 조회 get방식
학생 출석 조회 get방식

------------ds
교사 등록 post,get방식
교사 삭제 get방식
전체 출석 업데이트 post방식
출석 조회 get방식
개별 출석 상태 업데이트 post방식
교사 목록 조회 get방식
교사 상세 정보 get방식
교사 번호로 담임 학급 학생 조회 get방식
교사 번호로 담당 과목 성적 조회 get방식
담당 과목 성적 입력 post, get방식
담당 과목 성적 수정 post, get방식
